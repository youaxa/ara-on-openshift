apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: mysql-ephemeral-template
message: |-
  The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

         Username: ${MYSQL_USER}
         Password: ${MYSQL_PASSWORD}
    Database Name: ${MYSQL_DATABASE}
   Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/

  For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.
metadata:
  annotations:
    description: |-
      MySQL database service, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.

      WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing
    iconClass: icon-mysql-database
    openshift.io/display-name: MySQL (Ephemeral)
    openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/db_images/mysql.html
    openshift.io/long-description: This template provides a standalone MySQL server
      with a database created.  The database is not stored on persistent storage,
      so any restart of the service will result in all data being lost.  The database
      name, username, and password are chosen via parameters when provisioning this
      service.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    tags: database,mysql
  creationTimestamp: 2019-06-06T16:24:31Z
  name: mysql-ephemeral
  namespace: openshift
  resourceVersion: "1471"
  selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/mysql-ephemeral
  uid: 9024fde4-8877-11e9-919c-fa163e752353
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    name: ${DATABASE_SERVICE_NAME}
  stringData:
    database-name: ${MYSQL_DATABASE}
    database-password: ${MYSQL_PASSWORD}
    database-root-password: ${MYSQL_ROOT_PASSWORD}
    database-user: ${MYSQL_USER}

#- apiVersion: v1
#  kind: ImageStream
#  metadata:
#    annotations:
#      description: Image stream for custom mysql
#    labels:
#      app: ${DATABASE_SERVICE_NAME}
#    name: ${DATABASE_SERVICE_NAME}
#    namespace: ${NAMESPACE}
#- apiVersion: v1
#  kind: BuildConfig
#  metadata:
#    annotations:
#      description: Custom build for mysql to allow dash names
#    labels:
#      app: ${DATABASE_SERVICE_NAME}
#    name: ${DATABASE_SERVICE_NAME}
#    namespace: ${NAMESPACE}
#  spec:
#    output:
#      to:
#        kind: ImageStreamTag
#        name: ${DATABASE_SERVICE_NAME}:${MYSQL_VERSION}
#        namespace: ${NAMESPACE}
#    runPolicy: Serial
#    source:
#      type: Git
#      git:
#        ref: ${BASEBUILDER_REPO_REF}
#        uri: ${BASEBUILDER_REPO_URL}
#      contextDir: ${BASEBUILDER_REPO_CONTEXT_DIR}
#      sourceSecret:
#        name: ${BASEBUILDER_REPO_AUTH}
#    strategy:
#      type: Docker
#      dockerStrategy:
#        from:
#          kind: DockerImage
#          name: "docker.io/centos/mysql-57-centos7"
#    successfulBuildsHistoryLimit: 2
#    failedBuildsHistoryLimit: 5
#    triggers:
#    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: mysql
      nodePort: 0
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: ${DATABASE_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${DATABASE_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          command:
            - /bin/bash
            - '-c'
            - |
              cp -f /tmp/conf/ara.cnf /etc/my.cnf.d/ && \
              /bin/run-mysqld
          env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: ${DATABASE_SERVICE_NAME}
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${DATABASE_SERVICE_NAME}
          image: 'docker.io/centos/mysql-57-centos7'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: ${DATABASE_SERVICE_NAME}-data
          - mountPath: /tmp/conf
            name: ara-conf
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - emptyDir: {}
          name: ${DATABASE_SERVICE_NAME}-data
        - name: ara-conf
          configMap:
            name: mysql-conf
            defaultMode: 0660
    triggers:
#    - imageChangeParams:
#        automatic: true
#        containerNames:
#        - mysql
#        from:
#          kind: ImageStreamTag
#          name: ${DATABASE_SERVICE_NAME}:${MYSQL_VERSION}
#          namespace: openshift
#        lastTriggeredImage: ""
#      type: ImageChange
    - type: ConfigChange
  status: {}
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  value: openshift
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL Connection Username
  from: user[A-Z0-9]{3}
  generate: expression
  name: MYSQL_USER
  required: true
- description: Password for the MySQL connection user.
  displayName: MySQL Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  required: true
- description: Password for the MySQL root user.
  displayName: MySQL root user Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_ROOT_PASSWORD
  required: true
- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  name: MYSQL_DATABASE
  required: true
  value: sampledb
- description: Version of MySQL image to be used (5.7, or latest).
  displayName: Version of MySQL Image
  name: MYSQL_VERSION
  required: true
  value: "5.7"
#- name: BASEBUILDER_REPO_URL
#  displayName: Base builder repository URL
#  description: The URL of the repository with builder scripts specific for the app
#  value:
#  required: true
#- name: BASEBUILDER_REPO_AUTH
#  displayName: Base builder Secret for repository authentication
#  description: The referenced OKD secret used to authenticaate to the specified repository
#  value:
#- name: BASEBUILDER_REPO_REF
#  displayName: Base builder repository Reference
#  description: >-
#    Set this to a branch name, tag or other ref of your repository if you are
#    not using the default branch.
#  value: ""
#- name: BASEBUILDER_REPO_CONTEXT_DIR
#  displayName: Base builder repository Context Directory
#  description: >-
#    Set this to the relative path to your project if it is not in the root of
#    your repository.
#  value: ""
